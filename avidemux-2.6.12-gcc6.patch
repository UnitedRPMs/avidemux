--- a/avidemux_core/ADM_coreVideoCodec/include/ADM_ffmp43.h
+++ b/avidemux_core/ADM_coreVideoCodec/include/ADM_ffmp43.h
@@ -182,7 +182,7 @@ ADM_COREVIDEOCODEC6_EXPORT void ADM_lavD
 #define WRAP_Open_Template(funcz,argz,display,codecid,extra) \
 {\
 AVCodec *codec=funcz(argz);\
-if(!codec) {GUI_Error_HIG("Codec",QT_TR_NOOP("Internal error finding codec"display));ADM_assert(0);} \
+if(!codec) {GUI_Error_HIG("Codec",QT_TR_NOOP("Internal error finding codec" display));ADM_assert(0);} \
   codecId=codecid; \
   _context = avcodec_alloc_context3 (codec);\
   ADM_assert (_context);\
@@ -212,13 +212,13 @@ if(!codec) {GUI_Error_HIG("Codec",QT_TR_
   \
   if (avcodec_open2(_context, codec, NULL) < 0)  \
                       { \
-                                        printf("[lavc] Decoder init: "display" video decoder failed!\n"); \
-                                        GUI_Error_HIG("Codec","Internal error opening "display); \
+                                        printf("[lavc] Decoder init: " display " video decoder failed!\n"); \
+                                        GUI_Error_HIG("Codec","Internal error opening " display); \
                                         ADM_assert(0); \
                                 } \
                                 else \
                                 { \
-                                        printf("[lavc] Decoder init: "display" video decoder initialized! (%s)\n",codec->long_name); \
+                                        printf("[lavc] Decoder init: " display " video decoder initialized! (%s)\n",codec->long_name); \
                                 } \
 }
 
--- a/avidemux/qt4/ADM_jobs/src/ADM_jobControl.cpp
+++ b/avidemux/qt4/ADM_jobs/src/ADM_jobControl.cpp
@@ -112,12 +112,12 @@ void jobWindow::refreshList(void)
         QTableWidgetItem *endItem=fromText (end,i);
         QTableWidgetItem *durItem=fromText (dur,i);
 
-#define MX(x,y) case ADM_JOB_##x:  status->setIcon(QIcon(":/jobs/"y));break;
+#define MX(x,y) case ADM_JOB_##x:  status->setIcon(QIcon(":/jobs/" y));break;
         switch(listOfJob[i].status)
         {
-            MX(KO,"gtk-no.png");
-            MX(OK,"gtk-ok.png");        
-            MX(RUNNING,"gtk-media-play.png");
+            MX(KO, "gtk-no.png");
+            MX(OK, "gtk-ok.png");        
+            MX(RUNNING, "gtk-media-play.png");
             default:
                 break;
         }
--- a/avidemux_plugins/ADM_demuxers/MpegTS/dmxTSPacket.cpp
+++ b/avidemux_plugins/ADM_demuxers/MpegTS/dmxTSPacket.cpp
@@ -433,7 +433,7 @@ nextPack3:
 /**
     \fn decodePesHeader
 */
-#define fail(x) {printf("[Ts Demuxer]*********"x"*******\n");return false;}
+#define fail(x) {printf("[Ts Demuxer]*********" x "*******\n");return false;}
 bool tsPacket::decodePesHeader(TS_PESpacket *pes)
 {
     uint8_t  *start=pes->payload+6;
--- a/avidemux_plugins/ADM_videoEncoder/ffMpeg4/ADM_ffMpeg4.h
+++ b/avidemux_plugins/ADM_videoEncoder/ffMpeg4/ADM_ffMpeg4.h
@@ -43,9 +43,9 @@
 		2,				/* max_b_frames */ \
 		0,				/* mpeg_quant */ \
 		1,				/* is_luma_elim_threshold */ \
-		-2,				/* luma_elim_threshold */ \
+		(uint32)-2,			/* luma_elim_threshold */ \
 		1,				/* is_chroma_elim_threshold */ \
-		-5,				/* chroma_elim_threshold */ \
+		(uint32)-5,			/* chroma_elim_threshold */ \
 		0.05,				/*lumi_masking */ \
 		1,				/* is lumi */ \
 		0.01,				/*dark_masking */ \
